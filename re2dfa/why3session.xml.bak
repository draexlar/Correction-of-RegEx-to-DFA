<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="re2dfa.mlw"/>
<theory name="NFA">
 <goal name="automaton&#39;vc" expl="VC for automaton">
 <proof prover="0"><result status="valid" time="0.36"/></proof>
 </goal>
 <goal name="delta_get_1st&#39;vc" expl="VC for delta_get_1st">
 <proof prover="0" timelimit="5"><result status="valid" time="1.18"/></proof>
 </goal>
 <goal name="delta_get_2nd&#39;vc" expl="VC for delta_get_2nd">
 <proof prover="0" timelimit="5"><result status="valid" time="1.77"/></proof>
 </goal>
 <goal name="delta_get_3rd&#39;vc" expl="VC for delta_get_3rd">
 <proof prover="0" timelimit="5"><result status="valid" time="1.63"/></proof>
 </goal>
 <goal name="filter_trans&#39;vc" expl="VC for filter_trans">
 <transf name="split_vc" >
  <goal name="filter_trans&#39;vc.0" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="filter_trans&#39;vc.1" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="filter_trans&#39;vc.2" expl="postcondition">
  <transf name="split_vc" >
   <goal name="filter_trans&#39;vc.2.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="filter_trans&#39;vc.2.1" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="filter_trans&#39;vc.2.2" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="filter_trans&#39;vc.3" expl="postcondition">
  <transf name="split_vc" >
   <goal name="filter_trans&#39;vc.3.0" expl="postcondition">
   <transf name="split_vc" >
    <goal name="filter_trans&#39;vc.3.0.0" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.16"/></proof>
    </goal>
    <goal name="filter_trans&#39;vc.3.0.1" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.23"/></proof>
    </goal>
    <goal name="filter_trans&#39;vc.3.0.2" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.17"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="filter_trans&#39;vc.3.1" expl="postcondition">
   <transf name="split_vc" >
    <goal name="filter_trans&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.13"/></proof>
    </goal>
    <goal name="filter_trans&#39;vc.3.1.1" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.36"/></proof>
    </goal>
    <goal name="filter_trans&#39;vc.3.1.2" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.18"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="filter_trans&#39;vc.4" expl="postcondition">
  <proof prover="0"><result status="valid" time="0.45"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="fold_next_states&#39;vc" expl="VC for fold_next_states">
 <transf name="split_vc" >
  <goal name="fold_next_states&#39;vc.0" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="fold_next_states&#39;vc.1" expl="precondition">
  <proof prover="0"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="fold_next_states&#39;vc.2" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="1.16"/></proof>
  </goal>
  <goal name="fold_next_states&#39;vc.3" expl="postcondition">
  <proof prover="0"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="fold_next_states&#39;vc.4" expl="postcondition">
  <transf name="split_vc" >
   <goal name="fold_next_states&#39;vc.4.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="fold_next_states&#39;vc.4.1" expl="postcondition">
   <proof prover="2"><result status="valid" time="0.93" steps="1928"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fold_next_states&#39;vc.5" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.13" steps="244"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eclose&#39;vc" expl="VC for eclose">
 <proof prover="2"><result status="valid" time="0.93" steps="4507"/></proof>
 </goal>
 <goal name="delta&#39;vc" expl="VC for delta">
 <proof prover="0"><result status="valid" time="0.77"/></proof>
 </goal>
 <goal name="fold_delta&#39;vc" expl="VC for fold_delta">
 <transf name="split_vc" >
  <goal name="fold_delta&#39;vc.0" expl="precondition">
  <proof prover="0"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="fold_delta&#39;vc.1" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="fold_delta&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="fold_delta&#39;vc.3" expl="postcondition">
  <proof prover="0"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="fold_delta&#39;vc.4" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.49" steps="1524"/></proof>
  </goal>
  <goal name="fold_delta&#39;vc.5" expl="postcondition">
  <proof prover="0"><result status="valid" time="0.39"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="delta_ext&#39;vc" expl="VC for delta_ext">
 <transf name="split_vc" >
  <goal name="delta_ext&#39;vc.0" expl="precondition">
  <proof prover="0"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.1" expl="precondition">
  <proof prover="0"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.2" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.3" expl="precondition">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.4" expl="precondition">
  <proof prover="0"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.5" expl="precondition">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.6" expl="precondition">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.7" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.8" expl="precondition">
  <proof prover="0"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.9" expl="precondition">
  <proof prover="0"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.10" expl="precondition">
  <proof prover="0"><result status="valid" time="0.15"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.11" expl="precondition">
  <proof prover="0"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="delta_ext&#39;vc.12" expl="postcondition">
  <transf name="split_vc" >
   <goal name="delta_ext&#39;vc.12.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="delta_ext&#39;vc.12.1" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="delta_ext&#39;vc.12.2" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="delta_ext&#39;vc.12.3" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.15"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="delta_ext&#39;vc.13" expl="postcondition">
  <transf name="split_vc" >
   <goal name="delta_ext&#39;vc.13.0" expl="postcondition">
   <proof prover="2" timelimit="5"><result status="valid" time="0.46" steps="1251"/></proof>
   </goal>
   <goal name="delta_ext&#39;vc.13.1" expl="postcondition">
   <transf name="unfold" arg1="path" arg2="in" arg3="H">
    <goal name="delta_ext&#39;vc.13.1.0" expl="postcondition">
    <transf name="destruct" arg1="H">
     <goal name="delta_ext&#39;vc.13.1.0.0" expl="destruct premise">
     <proof prover="0"><result status="valid" time="0.12"/></proof>
     </goal>
     <goal name="delta_ext&#39;vc.13.1.0.1" expl="postcondition">
     <transf name="subst_all" >
      <goal name="delta_ext&#39;vc.13.1.0.1.0" expl="postcondition">
      <transf name="compile_match" >
       <goal name="delta_ext&#39;vc.13.1.0.1.0.0" expl="postcondition">
       <proof prover="2"><result status="valid" time="0.19" steps="363"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="delta_ext&#39;vc.13.2" expl="postcondition">
   <transf name="unfold" arg1="path" arg2="in" arg3="H">
    <goal name="delta_ext&#39;vc.13.2.0" expl="postcondition">
    <transf name="subst_all" >
     <goal name="delta_ext&#39;vc.13.2.0.0" expl="postcondition">
     <transf name="destruct" arg1="H">
      <goal name="delta_ext&#39;vc.13.2.0.0.0" expl="destruct premise">
      <proof prover="0"><result status="valid" time="0.12"/></proof>
      </goal>
      <goal name="delta_ext&#39;vc.13.2.0.0.1" expl="postcondition">
      <proof prover="2"><result status="valid" time="0.19" steps="572"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="delta_ext&#39;vc.13.3" expl="postcondition">
   <proof prover="2" timelimit="5"><result status="valid" time="1.69" steps="5290"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="compile&#39;vc" expl="VC for compile">
 <transf name="split_vc" >
  <goal name="compile&#39;vc.0" expl="precondition">
  <proof prover="0"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="compile&#39;vc.1" expl="precondition">
  <proof prover="0"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="compile&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="compile&#39;vc.3" expl="precondition">
  <proof prover="0"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="compile&#39;vc.4" expl="postcondition">
  <transf name="split_vc" >
   <goal name="compile&#39;vc.4.0" expl="postcondition">
   <transf name="inline_goal" >
    <goal name="compile&#39;vc.4.0.0" expl="postcondition">
    <transf name="subst_all" >
     <goal name="compile&#39;vc.4.0.0.0" expl="postcondition">
     <transf name="compile_match" >
      <goal name="compile&#39;vc.4.0.0.0.0" expl="postcondition">
      <proof prover="0"><result status="valid" time="0.25"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="compile&#39;vc.5" expl="precondition">
  <proof prover="0"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="compile&#39;vc.6" expl="precondition">
  <proof prover="0"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="compile&#39;vc.7" expl="precondition">
  <proof prover="0"><result status="valid" time="0.53"/></proof>
  </goal>
  <goal name="compile&#39;vc.8" expl="precondition">
  <proof prover="0"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="compile&#39;vc.9" expl="assertion">
  <proof prover="0"><result status="valid" time="0.41"/></proof>
  </goal>
  <goal name="compile&#39;vc.10" expl="postcondition">
  <transf name="subst_all" >
   <goal name="compile&#39;vc.10.0" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile&#39;vc.10.0.0" expl="postcondition">
    <transf name="inline_goal" >
     <goal name="compile&#39;vc.10.0.0.0" expl="postcondition">
     <transf name="split_all_full" >
      <goal name="compile&#39;vc.10.0.0.0.0" expl="postcondition">
      <transf name="split_vc" >
       <goal name="compile&#39;vc.10.0.0.0.0.0" expl="postcondition">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="0.51"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="compile&#39;vc.11" expl="precondition">
  <proof prover="0"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="compile&#39;vc.12" expl="precondition">
  <proof prover="0"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="compile&#39;vc.13" expl="precondition">
  <proof prover="0"><result status="valid" time="0.53"/></proof>
  </goal>
  <goal name="compile&#39;vc.14" expl="precondition">
  <proof prover="0"><result status="valid" time="0.50"/></proof>
  </goal>
  <goal name="compile&#39;vc.15" expl="assertion">
  <proof prover="0"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="compile&#39;vc.16" expl="postcondition">
  <transf name="unfold" arg1="regexLang">
   <goal name="compile&#39;vc.16.0" expl="postcondition">
   <transf name="subst_all" >
    <goal name="compile&#39;vc.16.0.0" expl="postcondition">
    <transf name="compile_match" >
     <goal name="compile&#39;vc.16.0.0.0" expl="postcondition">
     <proof prover="2"><result status="valid" time="0.17" steps="949"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
